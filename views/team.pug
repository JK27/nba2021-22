extends base

block append head 
  script(src='https://api.mapbox.com/mapbox-gl-js/v2.8.1/mapbox-gl.js')
  link(href='https://api.mapbox.com/mapbox-gl-js/v2.8.1/mapbox-gl.css' rel='stylesheet')


//- ///////////////////////////////////////////////////////////////// MIXINS
//- /////////////////////////////////////////////////////// OVERVIEW BOX
mixin overviewBox(label, text, icon)
  .overview-box__detail
    svg.overview-box__icon
      //- use(xlink:href=`/img/icons.svg#icon-${icon}`)
    span.overview-box__label= label
    span.overview-box__text= text

block content
  ///////////////////////////////////////////////////////// HEADER
  section.section-header
    //////////////////////////////////////// HEADER HERO
    .header__hero
      //- .header__hero-overlay &nbsp;
      img.header__hero-img(src=`/img/logos/${team.logo}`, alt=`${team.market} ${team.name}`)

    //////////////////////////////////////// OVERVIEW BOX
    .overview-box
      div
        ///////////////////// QUICK FACTS
        .overview-box__group
          h2.heading-secondary Quick facts
          //// FOUNDED
          +overviewBox("Founded", team.founded, "calendar")
          //// CONFERENCE
          +overviewBox("Conference", team.conference , "trending-up")
          //// DIVISION
          +overviewBox("Division", team.division, "user")
          h2.heading-secondary Titles
          //// CHAMPIONSHIPS
          +overviewBox("Championships", team.championships, "star")
          +overviewBox("Conference Titles", team.conf_titles, "star")
          +overviewBox("Division Titles", team.div_titles, "star")

  ////////////////////////////////////////// MAP
  section.section-map
    #map(data-venue=`${JSON.stringify(team.venue)}`)
    //////////////////////////////////////// OVERVIEW BOX
    .overview-box
      div
        ///////////////////// VENUE DETAILS
        .overview-box__group
          h2.heading-secondary Venue details
          //// NAME
          +overviewBox("Name", team.venue.name, "calendar")
          //// ADDRESS
          +overviewBox("Address", team.venue.address, "trending-up")
          //// CITY
          +overviewBox("City", team.venue.city, "user")
          //// STATE
          +overviewBox("State", team.venue.state_name, "star")
          //// CAPACITY
          +overviewBox("Capacity", team.venue.capacity, "star")

  //- ///////////////////////////////////////////////////////// PLAYERS
  section.section-reviews
    .reviews
      //- Loops through all guides creating an img with name and label for each.
      each player in team.players
        //////////////////////////////////// PLAYER CARD
        .reviews__card
          ///////////////////// NAME
          h6.reviews__user= player.full_name 
          ///////////////////// HEIGHT
          p.reviews__label Height
          p.reviews__text= player.height
          ///////////////////// WEIGHT
          p.reviews__label Weight
          p.reviews__text= player.weight
          ///////////////////// BIRTH PLACE
          //- DOES=> Splits birth_place string by the commas, returning an array with the city, state and country ISO code.
          - const place = player.birth_place.split(",")
          - const birth_city = place[0]
          - const birth_state = place[1].trim()

          //- DOES=> Removes whitespace from the string, leaving only the country ISO code.
          - const birth_country = place[2].trim()
          //- DOES=> Converts the county ISO code into the country name.
          - const country_name = new Intl.DisplayNames(['en'], {type: 'region'}).of(birth_country)
          p.reviews__label Birth Place
          //- DOES=> If there is a birth_state (it is not blank) then displays it separating it with a comma from the birth_city.
          p.reviews__text= `${birth_city}  ${birth_state ? `, ${birth_state}` : ''}`
          ///////////////////// COUNTRY
          p.reviews__label Country
          p.reviews__text= `${country_name}`
          ///////////////////// BIRTH DATE
          //- does=> Converts the birthdate string into a Date instance and then returns a string with a language sensitive representation of that date.
          - const date = new Date(player.birthdate).toLocaleString("en-gb", {day: "numeric", month: "long", year: "numeric"})
          p.reviews__label Birth Date 
          p.reviews__text= date 
